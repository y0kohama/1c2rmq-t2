// БИБЛИОТЕКА ИНТЕГРАЦИИ  RMQ

//  ВНЕДРЕНИЕ
//	1. Проверка параматров основного брокера ОсновнойБрокер(), корректировка логина - каждая система под своим логином
//	2. Проверка поддерживаемых типов ПоддерживаемыеДанные(), для каждого поддерживаемого модуля ИнтеграцияRMQТ2_*
//		2.1 Выполнение инструкция по внедрению (описаны в комментариях к началу модуля)
//	3. Размещение функции ИнициализироватьОчереди() в обработчике обновления (в отладке возможно это протестировать)
//	4. Обновление базы данных и указание пароля к брокеру e1cib/list/Справочник.ИнтеграцияRMQБрокеры

#Область Переопределяемыефункции

Функция ОсновнойБрокер()
	
	ПараметрыБрокера = Новый Структура;
	ПараметрыБрокера.Вставить("Сервер", "srv-test1.titan2.ru");
	ПараметрыБрокера.Вставить("Порт", 5672);
	ПараметрыБрокера.Вставить("ИмяВиртуальногоХоста", "1c_test");
	ПараметрыБрокера.Вставить("Логин", "monitor_user"); 			// Заменить, после обновления объязательно в форме списка установить пароль иначе будет ошибка "Error occured when calling method Connect() - wrong type for parameter number 3"
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
		|	Данные.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИнтеграцияRMQБрокеры КАК Данные
		|ГДЕ
		|	Данные.Сервер = &Сервер
		|	И Данные.Порт = &Порт
		|	И Данные.ИмяВиртуальногоХоста = &ИмяВиртуальногоХоста";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Сервер", ПараметрыБрокера.Сервер);
	Запрос.УстановитьПараметр("Порт", ПараметрыБрокера.Порт);
	Запрос.УстановитьПараметр("ИмяВиртуальногоХоста", ПараметрыБрокера.ИмяВиртуальногоХоста);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Брокер = Выборка.Ссылка;
		
	Иначе
		
		БрокерОбъект = Справочники.ИнтеграцияRMQБрокеры.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(БрокерОбъект, ПараметрыБрокера);
		БрокерОбъект.Наименование = "Основной брокер RMQ"; 
		БрокерОбъект.Записать();
		Брокер = БрокерОбъект.Ссылка;
		
	КонецЕсли; 
	
	Возврат Брокер;
	
КонецФункции 

Функция ПоддерживаемыеДанные() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("nomenclature");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция МодулиТиповДанных() Экспорт
	
	Результат = Новый Соответствие;
	
	Для Каждого Окончание Из ПоддерживаемыеДанные() Цикл
		ИмяМодуля = "ИнтеграцияRMQ_" + Окончание;
		Если Метаданные.ОбщиеМодули.Найти(ИмяМодуля) <> Неопределено Тогда
			Результат.Вставить(Окончание, ОбщегоНазначения.ОбщийМодуль(ИмяМодуля));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТочкаОбмена(Параметры) Экспорт
	
	Параметры.Вставить("Владелец", ОсновнойБрокер());

	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ИнтеграцияRMQТочкиОбмена.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИнтеграцияRMQТочкиОбмена КАК ИнтеграцияRMQТочкиОбмена
	|ГДЕ
	|	ИнтеграцияRMQТочкиОбмена.Владелец = &Владелец
	|	И ИнтеграцияRMQТочкиОбмена.Имя = &Имя
	|	И ИнтеграцияRMQТочкиОбмена.Тип = &Тип";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Владелец", Параметры.Владелец);
	Запрос.УстановитьПараметр("Имя", Параметры.Имя);
	Запрос.УстановитьПараметр("Тип", Параметры.Тип);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка.Ссылка;
		
	Иначе
		
		Результат = Справочники.ИнтеграцияRMQТочкиОбмена.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(Результат, Параметры);
		Результат.Записать();
		Результат = Результат.Ссылка;
		
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьИмяОчереди(Ключ,ТочкаОбмена) Экспорт
	Результат = ТочкаОбмена.Имя + "."+Ключ+"." + ТочкаОбмена.Владелец.Логин;
	Возврат Результат; 
КонецФункции

Функция Очередь(Параметры) Экспорт 
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИнтеграцияRMQОчереди.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИнтеграцияRMQОчереди КАК ИнтеграцияRMQОчереди
	|ГДЕ
	|	ИнтеграцияRMQОчереди.Владелец = &Владелец
	|	И ИнтеграцияRMQОчереди.ИмяОчереди = &ИмяОчереди";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Владелец", Параметры.Владелец);
	Запрос.УстановитьПараметр("ИмяОчереди", Параметры.ИмяОчереди);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка.Ссылка;
		
	Иначе
		
		Результат = Справочники.ИнтеграцияRMQОчереди.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(Результат, Параметры);
		
		Результат.Записать();
		Результат = Результат.Ссылка;
		
	КонецЕсли; 
	
	Возврат Результат;
КонецФункции

Функция ИнициализироватьОчереди() Экспорт
	Для Каждого Модуль ИЗ МодулиТиповДанных() Цикл
		Модуль.Значение.ИнициализироватьОчереди(Модуль.Ключ);		
	КонецЦикла;	
КонецФункции	
	
#КонецОбласти

#Область ОбщиеПроцедурыФункции

// Функция - заглушка вызывается в том случае когда отсутсвют все необходимые зависимости для модуля интеграции
//
// Параметры:
//  КлючевыеСвойства - Структура 	 - 
// 
// Возвращаемое значение:
//   - Неопределено
//
Функция ПолучитьСсылку(КлючевыеСвойства,СоздаватьЕслиНеНайдена = Ложь) Экспорт
	
КонецФункции	

Функция ПолучитьСсылкуСправочника(Менеджер,КлючевыеСвойства) Экспорт
	Перем Ссылка;
	Если ТипЗнч(КлючевыеСвойства) = Тип("Структура") Тогда
		Если ЗначениеЗаполнено(КлючевыеСвойства.GUID) Тогда
	 		Ссылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(КлючевыеСвойства.GUID));
		КонецЕсли;	
		Если Не Ссылка = Неопределено Тогда
			Если Ссылка.ПолучитьОбъект() = Неопределено Тогда
				Ссылка = Неопределено;
			КонецЕсли;	
		КонецЕсли;
		Если Ссылка = Неопределено Тогда	
			//попробуем по коду
			СсылкаКод		= Менеджер.НайтиПоКоду(КлючевыеСвойства.Код);
			Если Не СсылкаКод =  Неопределено Тогда
				Ссылка	= СсылкаКод;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	Возврат Ссылка;
Конецфункции

Функция ПолучитьОбъектСправочника(Менеджер,КлючевыеСвойства) Экспорт
	Перем СсылкаСсылка,Объект;
	ЭтоГруппа = Ложь;
	Если ТипЗнч(КлючевыеСвойства) = Тип("Структура") Тогда
		Если ЗначениеЗаполнено(КлючевыеСвойства.GUID) Тогда
	 		СсылкаСсылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(КлючевыеСвойства.GUID));
		КонецЕсли;	
		Если Не СсылкаСсылка = Неопределено Тогда
			Объект 	= СсылкаСсылка.ПолучитьОбъект();
		КонецЕсли;	
		Если Объект = Неопределено И ЗначениеЗаполнено(КлючевыеСвойства.Код) Тогда
			//попробуем по коду
			СсылкаКод		= Менеджер.НайтиПоКоду(КлючевыеСвойства.Код);
			Если СсылкаКод =  Неопределено ИЛИ СсылкаКод.Пустая() Тогда
				Если КлючевыеСвойства.Свойство("ЭтоГруппа",ЭтоГруппа) И ЭтоГруппа Тогда
					Объект	= Менеджер.СоздатьГруппу();
				Иначе	
					Объект	= Менеджер.СоздатьЭлемент();
				КонецЕсли;	
				Если Не СсылкаСсылка = Неопределено Тогда
					Объект.УстановитьСсылкуНового(СсылкаСсылка);
				КонецЕсли;	
			Иначе
				Объект 	= СсылкаКод.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	Возврат Объект;
Конецфункции

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

#КонецОбласти
