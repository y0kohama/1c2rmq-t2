
#Область ОбработкаЗапросов

Функция SubscribesGet(Запрос)
	
	ОбработчикВерсииФормата = ОпределитьОбработчикФорматаВерсии(Запрос);
	
	Ответ = Неопределено;
	СтрокаВызова = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1(Запрос, Ответ)", 
					ОбработчикВерсииФормата);
	Выполнить СтрокаВызова;
	
	Возврат Ответ;
	
КонецФункции

Функция SubscribesAny(Запрос)
	
	ШаблонОшибки = НСтр("ru = 'Сервис Subscribes поддерживает только HTTP-метод GET.
					   |Выполнена попытка использования метода %1'",
					   ИнтеграцияRMQ.КодОсновногоЯзыка());
	
	ТекстОшибки = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Запрос.HTTPМетод);
		
	Ответ = Новый HTTPСервисОтвет(405);
	Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
	Возврат Ответ;
	
КонецФункции

Функция WakeupPost(Запрос)
	
	ИмяСервиса = Запрос.ПараметрыЗапроса.Получить("handler");
	
	Если ИмяСервиса = Неопределено Тогда
		
		Ответ = Новый HTTPСервисОтвет(400);
		ТекстОтвета = НСтр("ru = 'Не задан параметр handler'",
			ИнтеграцияRMQ.КодОсновногоЯзыка());
		Ответ.УстановитьТелоИзСтроки(ТекстОтвета);
		Возврат Ответ;
	
	КонецЕсли;
	
	Очереди = ИнтеграцияRMQ.ОбслуживаемыеОчереди();
	СтрокаСервиса = Очереди.Найти(ИмяСервиса, "ИмяСервиса");
	Если СтрокаСервиса = Неопределено Тогда
		
		ТекстОшибки = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура-обработчик для handler %1 не найден'", 
				ИнтеграцияRMQ.КодОсновногоЯзыка()), 
			ИмяСервиса);
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		Возврат Ответ;
		
	КонецЕсли;
	
	НаименованиеЗадания = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Процедура-обработчик для handler %1'", ИнтеграцияRMQ.КодОсновногоЯзыка()),
		ИмяСервиса);
	КлючЗадания = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
		"1C2RMQhandler_%1",
		ИмяСервиса);
	ОтборЗаданий = Новый Структура;
	ОтборЗаданий.Вставить("Ключ", КлючЗадания);
	ОтборЗаданий.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	УстановитьПривилегированныйРежим(Истина);
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(ОтборЗаданий);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Задания.Количество() > 0 Тогда

		ТекстОшибки = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедура-обработчик для handler %1 уже запущена'", 
				ИнтеграцияRMQ.КодОсновногоЯзыка()),
			ИмяСервиса);
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		Возврат Ответ;
				
	КонецЕсли;
	
	Попытка

		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(ИнтеграцияRMQ.СтрокаТаблицыЗначенийВСтруктуру(СтрокаСервиса));
			
		ФоновыеЗадания.Выполнить(
			"ИнтеграцияRMQ.ОбработатьВызовСервиса",
			ПараметрыЗадания,
			КлючЗадания,
			НаименованиеЗадания);
			
	Исключение
		
		ШаблонТекстаОшибки = НСтр("ru = 'Процедура-обработчик для handler %1 не запущена по причине:
								  |%2'",
								  ИнтеграцияRMQ.КодОсновногоЯзыка()); 
		
		ТекстОшибки = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонТекстаОшибки,
			ИмяСервиса,
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		Возврат Ответ;
				
	КонецПопытки; 
	
	Ответ = Новый HTTPСервисОтвет(200);
	ТекстСообщения = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Процедура-обработчик для handler %1 запущена'", 
			ИнтеграцияRMQ.КодОсновногоЯзыка()),
		ИмяСервиса);
	Ответ.УстановитьТелоИзСтроки(ТекстСообщения);
	Возврат Ответ;
	
КонецФункции

Функция WakeupAny(Запрос)
	
	ШаблонОшибки = НСтр("ru = 'Сервис WakeUp поддерживает только HTTP-метод POST.
					   |Выполнена попытка использования %1'", 
					   ИнтеграцияRMQ.КодОсновногоЯзыка());
		
	ТекстОшибки = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Запрос.HTTPМетод);
		
	Ответ = Новый HTTPСервисОтвет(405);
	Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПоддерживаемыеВерсииФормата()
	
	СоответствиеВерсий = Новый Соответствие;
	СоответствиеВерсий.Вставить("2", "Подключаемый_SubscribesGetВерсия2");
	
	Возврат Новый ФиксированноеСоответствие(СоответствиеВерсий);
	
КонецФункции

Функция МинимальнаяВерсияФормата()
	
	ПоддерживаемыеВерсии = ПоддерживаемыеВерсииФормата();
	
	ТаблицаВерсий = Новый ТаблицаЗначений;
	ТаблицаВерсий.Колонки.Добавить("Версия");
	ТаблицаВерсий.Колонки.Добавить("Обработчик");
	
	Для Каждого ВерсияФормата Из ПоддерживаемыеВерсии Цикл
		
		ТаблицаВерсий.Добавить().Версия = ВерсияФормата.Ключ;
		ТаблицаВерсий.Добавить().Обработчик = ВерсияФормата.Значение;
		
	КонецЦикла;
	
	ТаблицаВерсий.Сортировать("Версия");
	
	Возврат ТаблицаВерсий[0].Обработчик;
	
КонецФункции

Функция ИмяЗаголовкаФорматаВерсии()
	
	Возврат "1c2rmq-version";
	
КонецФункции

Функция ОпределитьОбработчикФорматаВерсии(Запрос)
	
	ПоддерживаемыеВерсии = ПоддерживаемыеВерсииФормата();
	ВерсииЗапроса = Запрос.Заголовки.Получить(ИмяЗаголовкаФорматаВерсии());
	Если ПустаяСтрока(ВерсииЗапроса) Тогда
	
		// Заголовок не найден (регистрозависим) - отдаем в минимальной поддерживаемой версии
		ОбработчикФормата = МинимальнаяВерсияФормата();
		
	Иначе
		
		ВерсииКлиентаМассивом = ИнтеграцияRMQКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВерсииЗапроса, ";", Ложь);
		Если ВерсииКлиентаМассивом.Количество() = 0 Тогда
		
			ОбработчикФормата = "Подключаемый_SubscribesGetОтвет406Версия"; 
			
		Иначе
			
			ТаблицаВерсийКлиента = Новый ТаблицаЗначений;
			ТаблицаВерсийКлиента.Колонки.Добавить("Версия");
			Для Каждого ВерсияФормата Из ВерсииКлиентаМассивом Цикл
				ТаблицаВерсийКлиента.Добавить().Версия = ВерсияФормата;
			КонецЦикла;
			ТаблицаВерсийКлиента.Сортировать("Версия Убыв");
			ВерсияСопоставлена = Ложь;
			
			Для Каждого СтрокаВерсии Из ТаблицаВерсийКлиента Цикл
				
				ОбработчикВерсииКлиента = ПоддерживаемыеВерсии.Получить(СтрокаВерсии.Версия); 
				Если ОбработчикВерсииКлиента <> Неопределено Тогда
					
					ОбработчикФормата = ОбработчикВерсииКлиента;
					ВерсияСопоставлена = Истина;
					Прервать;					
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ ВерсияСопоставлена Тогда
				ОбработчикФормата = "Подключаемый_SubscribesGetОтвет406Версия";					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат ОбработчикФормата;
	
КонецФункции

#Область ПроцедурыОтветаSubscribesGet

//@skip-warning
Процедура Подключаемый_SubscribesGetОтвет406Версия(Запрос, Ответ)

	ТекстОшибки = НСтр("ru = 'Неподдерживаемые версии формата обмена'",
		ИнтеграцияRMQ.КодОсновногоЯзыка());

	Ответ = Новый HTTPСервисОтвет(406);
	Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		
КонецПроцедуры
	
//@skip-warning
Процедура Подключаемый_SubscribesGetВерсия2(Запрос, Ответ)

	МассивПодписок = Новый Массив;
	
	Очереди = ИнтеграцияRMQ.ОбслуживаемыеОчереди();
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
		
	Для Каждого Очередь Из Очереди Цикл

		СтруктураПодписки = Новый Структура;
		СтруктураПодписки.Вставить("id", Очередь.ИмяСервиса);
		
		СтрокаСоединенияБрокера = ИнтеграцияRMQКлиентСервер.ПодставитьПараметрыВСтроку(
			"amqp://%1:%2/%3", 
			Очередь.СерверБрокера,
			Формат(Очередь.ПортБрокера, "ЧГ=;"),
			Очередь.ВиртуальныйХостБрокера);
		СтруктураПодписки.Вставить("amqpConnectionString", СтрокаСоединенияБрокера);
		СтруктураПодписки.Вставить("wakeResendTime", Очередь.Таймаут);
		
#Область ОписаниеОчереди
		СтруктураОчереди = Новый Структура;
		СтруктураОчереди.Вставить("name", Очередь.ИмяОчереди);
		СтруктураОчереди.Вставить("durable", Очередь.Durable);
		СтруктураОчереди.Вставить("exclusive", Очередь.Exclusive);
		СтруктураОчереди.Вставить("autoDelete", Очередь.Autodelete);		
		СтруктураОчереди.Вставить("dlx", Очередь.DeadLetterExchange);
		
#Область ТочкиОбмена
		СтруктураТочкиОбмена = Новый Структура;
		СтруктураТочкиОбмена.Вставить("exchange", Очередь.ИмяТочкиОбмена);
		СтруктураТочкиОбмена.Вставить("routingKey", "");
		СтруктураТочкиОбмена.Вставить("arguments", "");
		
		МассивТочекОбмена = Новый Массив();
		МассивТочекОбмена.Добавить(СтруктураТочкиОбмена);
		СтруктураОчереди.Вставить("bindings", МассивТочекОбмена);
#КонецОбласти

#КонецОбласти
		
		СтруктураПодписки.Вставить("queueDeclaration", СтруктураОчереди);
		
		МассивПодписок.Добавить(СтруктураПодписки);
		
	КонецЦикла;		
		
	СтруктураПодписок = Новый Структура;
	СтруктураПодписок.Вставить("messageHandlers", МассивПодписок);
	ЗаписатьJSON(ЗаписьJSON, СтруктураПодписок);

	JSONСтрока = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	Ответ.Заголовки.Вставить("1c2rmq-version", "2");
	Ответ.УстановитьТелоИзСтроки(JSONСтрока);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти